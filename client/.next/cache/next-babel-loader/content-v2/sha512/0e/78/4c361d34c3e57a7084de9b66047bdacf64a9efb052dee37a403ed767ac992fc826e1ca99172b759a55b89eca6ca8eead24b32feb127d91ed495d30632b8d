{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\Rodrigo\\\\Documents\\\\dev\\\\rt-codes\\\\portfolio-v3\\\\client\\\\components\\\\Navbar\\\\Navbar.js\";\nimport React, { useRef } from 'react';\nimport Link from 'next/link';\nimport { IconButton, useDisclosure, HStack, Stack, Button, Icon, VStack, Drawer, DrawerOverlay, DrawerContent, DrawerCloseButton, DrawerHeader, DrawerBody } from '@chakra-ui/react';\nimport { HamburgerIcon, SunIcon } from '@chakra-ui/icons';\nexport function Navbar() {\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const btnMenuRef = useRef();\n  const Links = ['Home', 'Projects', 'About', 'Contact'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      id: \"navbar\",\n      className: \"navbar\",\n      position: \"absolute\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      px: {\n        base: 10,\n        sm: 20,\n        lg: 20,\n        xl: 80\n      },\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        w: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            as: 'nav',\n            spacing: 10,\n            display: {\n              base: 'none',\n              md: 'flex'\n            },\n            className: \"nav-links\",\n            children: [Links.map((link, index) => /*#__PURE__*/_jsxDEV(Link, {\n              href: `#${link.toLowerCase()}`,\n              children: link\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              borderRadius: \"50%\",\n              padding: 0,\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                as: SunIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: 'md',\n          icon: !isOpen && /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n            h: 8,\n            w: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 30\n          }, this),\n          \"aria-label\": 'Open Menu',\n          display: {\n            md: 'none'\n          },\n          ref: btnMenuRef,\n          onClick: onOpen,\n          backgroundColor: \"transparent\",\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        isOpen: isOpen,\n        placement: \"right\",\n        onClose: onClose,\n        finalFocusRef: btnMenuRef,\n        children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n          children: [/*#__PURE__*/_jsxDEV(DrawerCloseButton, {\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DrawerHeader, {\n            marginLeft: 2,\n            children: \"Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 6,\n              marginLeft: 4,\n              children: [/*#__PURE__*/_jsxDEV(VStack, {\n                spacing: 6,\n                alignItems: \"flex-start\",\n                children: Links.map(link => /*#__PURE__*/_jsxDEV(Link, {\n                  href: `#${link.toLowerCase()}`,\n                  children: link\n                }, link, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(VStack, {\n                alignItems: \"flex-start\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  borderRadius: \"50%\",\n                  padding: 0,\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    as: SunIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nconst Logo = () => {\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      className: \"logo\",\n      children: \"rt.codes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["F:/Rodrigo/Documents/dev/rt-codes/portfolio-v3/client/components/Navbar/Navbar.js"],"names":["React","useRef","Link","IconButton","useDisclosure","HStack","Stack","Button","Icon","VStack","Drawer","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerBody","HamburgerIcon","SunIcon","Navbar","isOpen","onOpen","onClose","btnMenuRef","Links","base","sm","lg","xl","md","map","link","index","toLowerCase","Logo"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport Link from 'next/link';\r\nimport {\r\n  IconButton,\r\n  useDisclosure,\r\n  HStack,\r\n  Stack,\r\n  Button,\r\n  Icon,\r\n  VStack,\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon, SunIcon } from '@chakra-ui/icons';\r\n\r\nexport function Navbar() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnMenuRef = useRef();\r\n\r\n  const Links = ['Home', 'Projects', 'About', 'Contact'];\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        id=\"navbar\"\r\n        className=\"navbar\"\r\n        position=\"absolute\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        px={{ base: 10, sm: 20, lg: 20, xl: 80 }}\r\n        width=\"100%\"\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          w=\"100%\"\r\n        >\r\n          <HStack>\r\n            <Logo />\r\n          </HStack>\r\n          <Stack alignItems=\"center\">\r\n            <HStack\r\n              as={'nav'}\r\n              spacing={10}\r\n              display={{ base: 'none', md: 'flex' }}\r\n              className=\"nav-links\"\r\n            >\r\n              {Links.map((link, index) => (\r\n                <Link key={index} href={`#${link.toLowerCase()}`}>\r\n                  {link}\r\n                </Link>\r\n              ))}\r\n              <Button borderRadius=\"50%\" padding={0}>\r\n                <Icon as={SunIcon} />\r\n              </Button>\r\n            </HStack>\r\n          </Stack>\r\n          <IconButton\r\n            size={'md'}\r\n            icon={!isOpen && <HamburgerIcon h={8} w={8} />}\r\n            aria-label={'Open Menu'}\r\n            display={{ md: 'none' }}\r\n            ref={btnMenuRef}\r\n            onClick={onOpen}\r\n            backgroundColor=\"transparent\"\r\n            color=\"white\"\r\n          />\r\n        </Stack>\r\n        <Drawer\r\n          isOpen={isOpen}\r\n          placement=\"right\"\r\n          onClose={onClose}\r\n          finalFocusRef={btnMenuRef}\r\n        >\r\n          <DrawerOverlay />\r\n          <DrawerContent>\r\n            <DrawerCloseButton color=\"white\" />\r\n            <DrawerHeader marginLeft={2}>Menu</DrawerHeader>\r\n            <DrawerBody>\r\n              <Stack spacing={6} marginLeft={4}>\r\n                <VStack spacing={6} alignItems=\"flex-start\">\r\n                  {Links.map((link) => (\r\n                    <Link key={link} href={`#${link.toLowerCase()}`}>\r\n                      {link}\r\n                    </Link>\r\n                  ))}\r\n                </VStack>\r\n                <VStack alignItems=\"flex-start\">\r\n                  <Button borderRadius=\"50%\" padding={0}>\r\n                    <Icon as={SunIcon} />\r\n                  </Button>\r\n                </VStack>\r\n              </Stack>\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </Drawer>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <Stack>\r\n      <Link href=\"/\" className=\"logo\">\r\n        rt.codes\r\n      </Link>\r\n    </Stack>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}